on:
  push:
    branches:
    - main

name: Build and Deploy to Cloud Run and Tag to GitHub
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  SERVICE: gcp-github-actions-demo
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: get-npm-version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@main

    # authentication via credentials json
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0

    - name: Authorize Docker push
      run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

    - name: Build and Push Container
      run: |-
        docker build -t ${{ env.REGION }}-docker.pkg.dev/shultzlab/docker-gcp/${{ env.SERVICE }}:${{ steps.package-version.outputs.current-version}} .
        docker push ${{ env.REGION }}-docker.pkg.dev/shultzlab/docker-gcp/${{ env.SERVICE }}:${{ steps.package-version.outputs.current-version}}

    - name: Deploy to Cloud Run
      run: |-
        gcloud run deploy ${{ env.SERVICE }} \
          --region ${{ env.REGION }} \
          --image ${{ env.REGION }}-docker.pkg.dev/shultzlab/docker-gcp/${{ env.SERVICE }}:${{ steps.package-version.outputs.current-version}} \
          --platform "managed" \
          --quiet \
          --cpu=1 \
          --memory=512Mi \
          --min-instances=1 \
          --max-instances=5 \
          --port=8080 \
          --allow-unauthenticated
    
    - name: Create tag
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: "refs/tags/v${{ steps.package-version.outputs.current-version}}",
            sha: context.sha
          })